Starting audit...
[ERROR] D:\ProiectPOO\.\src\database\Database.java:10:1: Class Database should be declared as final. [FinalClass]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:13:20: Name 'SantaBudget' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:35:34: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:35:35: Parameter numberOfYears should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:39:32: Parameter santaBudget should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:44:35: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:44:36: Parameter childrenInput should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:51:32: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:51:33: Parameter giftsInput should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:58:34: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:58:35: Parameter annualChangesInput should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\database\Parser.java:11:5: Class 'Parser' looks like designed for extension (can be subclassed), but the method 'buildDatabase' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Parser' final or making the method 'buildDatabase' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\database\Parser.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\database\Parser.java:11:31: Parameter input should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:19:18: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:19:19: Parameter childData should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:32:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:36:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:36:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:40:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:44:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:44:29: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:48:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:52:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:52:30: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:56:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:60:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:60:24: Parameter age should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:64:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:68:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:68:25: Parameter city should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:72:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:76:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:76:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:80:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getAvgScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getAvgScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:84:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setAvgScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setAvgScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:84:29: Parameter avgScore should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:88:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getGiftPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getGiftPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:92:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setGiftPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setGiftPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:92:36: Parameter giftPreferences should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:96:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:100:5: Class 'Child' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Child' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:100:29: Parameter category should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Gift.java:11:17: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\ProiectPOO\.\src\entities\Gift.java:11:18: Parameter giftData should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Gift.java:17:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Gift.java:21:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Gift.java:21:32: Parameter productName should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Gift.java:25:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Gift.java:29:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Gift.java:29:26: Parameter price should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Gift.java:33:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Gift.java:37:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\entities\Gift.java:37:29: Parameter category should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:15:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:15:35: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:15:52: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:15:70: Parameter age should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:16:23: Parameter city should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:16:36: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:16:54: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:26:5: Class 'ChildInput' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInput' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:26:28: '{' at column 28 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:28:5: Class 'ChildInput' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInput' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:28:33: '{' at column 33 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:30:5: Class 'ChildInput' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInput' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:30:34: '{' at column 34 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:32:5: Class 'ChildInput' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInput' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:32:29: '{' at column 29 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:34:5: Class 'ChildInput' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInput' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:34:29: '{' at column 29 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:36:5: Class 'ChildInput' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInput' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:36:34: '{' at column 34 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:38:5: Class 'ChildInput' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildInput' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildInput.java:38:52: '{' at column 52 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildUpdateInput.java:10:29: Parameter id should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildUpdateInput.java:10:41: Parameter newNiceScore should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildUpdateInput.java:10:62: Parameter newGiftPreferences should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildUpdateInput.java:16:5: Class 'ChildUpdateInput' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInput' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildUpdateInput.java:16:28: '{' at column 28 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildUpdateInput.java:18:5: Class 'ChildUpdateInput' looks like designed for extension (can be subclassed), but the method 'getNewNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInput' final or making the method 'getNewNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildUpdateInput.java:18:37: '{' at column 37 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildUpdateInput.java:20:5: Class 'ChildUpdateInput' looks like designed for extension (can be subclassed), but the method 'getNewGiftPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInput' final or making the method 'getNewGiftPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\ChildUpdateInput.java:20:54: '{' at column 54 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\GiftInput.java:9:22: Parameter productName should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\GiftInput.java:9:42: Parameter price should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\GiftInput.java:9:56: Parameter category should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\GiftInput.java:15:5: Class 'GiftInput' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftInput' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\GiftInput.java:15:36: '{' at column 36 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\GiftInput.java:17:5: Class 'GiftInput' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftInput' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\GiftInput.java:17:30: '{' at column 30 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\GiftInput.java:19:5: Class 'GiftInput' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftInput' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\GiftInput.java:19:33: '{' at column 33 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\InputLoader.java:26:5: Class 'InputLoader' looks like designed for extension (can be subclassed), but the method 'readData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputLoader' final or making the method 'readData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\InputLoader.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\fileio\InputLoader.java:65: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\ProiectPOO\.\src\fileio\InputLoader.java:71: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] D:\ProiectPOO\.\src\fileio\InputLoader.java:75: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] D:\ProiectPOO\.\src\fileio\Writer.java:11:19: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\ProiectPOO\.\src\fileio\Writer.java:18:5: Class 'Writer' looks like designed for extension (can be subclassed), but the method 'writeFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Writer' final or making the method 'writeFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\Writer.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\fileio\Writer.java:18:33: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\ProiectPOO\.\src\fileio\Writer.java:27:5: Class 'Writer' looks like designed for extension (can be subclassed), but the method 'closeJson' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Writer' final or making the method 'closeJson' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\Writer.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\fileio\YearDataInput.java:11: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] D:\ProiectPOO\.\src\fileio\YearDataInput.java:11:26: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\YearDataInput.java:11:49: Parameter newGifts should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\YearDataInput.java:11:80: Parameter newChildren should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\YearDataInput.java:12:26: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\YearDataInput.java:19:5: Class 'YearDataInput' looks like designed for extension (can be subclassed), but the method 'getNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YearDataInput' final or making the method 'getNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\YearDataInput.java:19:39: '{' at column 39 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\YearDataInput.java:21:5: Class 'YearDataInput' looks like designed for extension (can be subclassed), but the method 'getNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YearDataInput' final or making the method 'getNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\YearDataInput.java:21:47: '{' at column 47 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\YearDataInput.java:23:5: Class 'YearDataInput' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YearDataInput' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\YearDataInput.java:23:51: '{' at column 51 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\fileio\YearDataInput.java:25:5: Class 'YearDataInput' looks like designed for extension (can be subclassed), but the method 'getChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YearDataInput' final or making the method 'getChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\fileio\YearDataInput.java:25:61: '{' at column 61 should have line break after. [LeftCurly]
[ERROR] D:\ProiectPOO\.\src\main\Main.java:15:8: Unused import - java.nio.file.Files. [UnusedImports]
[ERROR] D:\ProiectPOO\.\src\main\Main.java:16:8: Unused import - java.nio.file.Path. [UnusedImports]
[ERROR] D:\ProiectPOO\.\src\main\Main.java:17:8: Unused import - java.nio.file.Paths. [UnusedImports]
[ERROR] D:\ProiectPOO\.\src\main\Main.java:54:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\utils\Utils.java:11:1: Class Utils should be declared as final. [FinalClass]
[ERROR] D:\ProiectPOO\.\src\utils\Utils.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\utils\Utils.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\utils\Utils.java:45: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] D:\ProiectPOO\.\src\utils\Utils.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\utils\Utils.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\utils\Utils.java:84:20: '(' is followed by whitespace. [ParenPad]
[ERROR] D:\ProiectPOO\.\src\utils\Utils.java:87: Line is longer than 100 characters (found 132). [LineLength]
[ERROR] D:\ProiectPOO\.\src\utils\Utils.java:87:99: 'typecast' is not followed by whitespace. [WhitespaceAfter]
Audit done.
Checkstyle ends with 134 errors.
