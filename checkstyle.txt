Starting audit...
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:9:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:35:30: '19' is a magic number. [MagicNumber]
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:50: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:52:38: Parameter testNumber should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:54: Line is longer than 100 characters (found 138). [LineLength]
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:56:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:58: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:71:40: Parameter testNumber should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:93:40: Parameter testNumber should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:97:28: '>' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:97:48: '15' is a magic number. [MagicNumber]
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:97:51: ')' is preceded with whitespace. [ParenPad]
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:97:55: '3' is a magic number. [MagicNumber]
[ERROR] D:\ProiectPOO\.\src\checker\Checker.java:97:59: '4' is a magic number. [MagicNumber]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:117:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\database\Database.java:117:36: Parameter sortStrategy should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:115:30: Parameter cityScore should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Child.java:135:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\entities\Gift.java:54:29: Parameter quantity should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\enums\CityStrategyEnum.java:17:22: Parameter value should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\enums\ElvesType.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] D:\ProiectPOO\.\src\enums\ElvesType.java:22:15: Parameter value should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\factory\BlackElfVisitor.java:7:5: Class 'BlackElfVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BlackElfVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\factory\BlackElfVisitor.java:8:23: Parameter child should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\factory\BlackElfVisitor.java:11:36: '30' is a magic number. [MagicNumber]
[ERROR] D:\ProiectPOO\.\src\factory\BlackElfVisitor.java:11:41: '100' is a magic number. [MagicNumber]
[ERROR] D:\ProiectPOO\.\src\factory\ElfFactory.java:3:15: Using the '.*' form of import should be avoided - visitor.*. [AvoidStarImport]
[ERROR] D:\ProiectPOO\.\src\factory\ElfFactory.java:5:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\ProiectPOO\.\src\factory\ElfFactory.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\factory\ElfFactory.java:7:37: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\ProiectPOO\.\src\factory\ElfFactory.java:7:38: Parameter type should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\factory\PinkElfVisitor.java:7:5: Class 'PinkElfVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PinkElfVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\factory\PinkElfVisitor.java:8:23: Parameter child should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\factory\PinkElfVisitor.java:11:36: '30' is a magic number. [MagicNumber]
[ERROR] D:\ProiectPOO\.\src\factory\PinkElfVisitor.java:11:41: '100' is a magic number. [MagicNumber]
[ERROR] D:\ProiectPOO\.\src\factory\WhiteElfVisitor.java:7:5: Class 'WhiteElfVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WhiteElfVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\factory\WhiteElfVisitor.java:8:23: Parameter child should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\factory\YellowElfVisitor.java:11:5: Class 'YellowElfVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YellowElfVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\factory\YellowElfVisitor.java:12:23: Parameter child should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\fileio\InputLoader.java:96: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\ProiectPOO\.\src\solver\SolveFirstYear.java:9:15: Using the '.*' form of import should be avoided - visitor.*. [AvoidStarImport]
[ERROR] D:\ProiectPOO\.\src\solver\SolveNextYears.java:12:15: Using the '.*' form of import should be avoided - visitor.*. [AvoidStarImport]
[ERROR] D:\ProiectPOO\.\src\solver\SolveNextYears.java:97:49: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\ProiectPOO\.\src\solver\Solver.java:5:8: Unused import - entities.Child. [UnusedImports]
[ERROR] D:\ProiectPOO\.\src\solver\Solver.java:7:8: Unused import - strategy.SortStrategy. [UnusedImports]
[ERROR] D:\ProiectPOO\.\src\solver\Solver.java:12:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] D:\ProiectPOO\.\src\strategy\SortById.java:9:5: Class 'SortById' looks like designed for extension (can be subclassed), but the method 'sort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortById' final or making the method 'sort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\strategy\SortByNiceCity.java:8:5: Class 'SortByNiceCity' looks like designed for extension (can be subclassed), but the method 'sort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortByNiceCity' final or making the method 'sort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\strategy\SortByNiceScore.java:9:5: Class 'SortByNiceScore' looks like designed for extension (can be subclassed), but the method 'sort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortByNiceScore' final or making the method 'sort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\strategy\SortStrategy.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\strategy\SortStrategy.java:4:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] D:\ProiectPOO\.\src\strategy\StrategyFactory.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\ProiectPOO\.\src\strategy\StrategyFactory.java:5:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\strategy\StrategyFactory.java:5:47: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\ProiectPOO\.\src\strategy\StrategyFactory.java:5:48: Parameter type should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\utils\Utils.java:102: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] D:\ProiectPOO\.\src\utils\Utils.java:248:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\ProiectPOO\.\src\utils\Utils.java:248:62: Parameter child should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\visitor\BonusScoreVisitor.java:5:50: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\ProiectPOO\.\src\visitor\BonusScoreVisitor.java:6:5: Class 'BonusScoreVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BonusScoreVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\visitor\BonusScoreVisitor.java:7:23: Parameter child should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\visitor\BonusScoreVisitor.java:10:70: '100' is a magic number. [MagicNumber]
[ERROR] D:\ProiectPOO\.\src\visitor\BonusScoreVisitor.java:12:31: '10' is a magic number. [MagicNumber]
[ERROR] D:\ProiectPOO\.\src\visitor\BonusScoreVisitor.java:13:31: '10' is a magic number. [MagicNumber]
[ERROR] D:\ProiectPOO\.\src\visitor\CityScoreVisitor.java:6:49: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\ProiectPOO\.\src\visitor\CityScoreVisitor.java:7:5: Class 'CityScoreVisitor' looks like designed for extension (can be subclassed), but the method 'visit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CityScoreVisitor' final or making the method 'visit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\visitor\CityScoreVisitor.java:8:23: Parameter child should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\visitor\GiveGiftVisitor.java:24:96: '&&' should be on a new line. [OperatorWrap]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:21:24: Parameter child should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:39:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:43:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:43:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:47:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:51:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:51:29: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:55:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:59:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:59:30: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:63:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:67:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:67:25: Parameter city should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:71:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:75:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:75:24: Parameter age should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:79:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:83:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:83:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:87:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:91:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:91:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:95:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'getNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'getNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:99:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'setNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'setNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:99:37: Parameter niceScoreHistory should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:103:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'getAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'getAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:107:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'setAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'setAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:107:35: Parameter assignedBudget should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:111:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'getReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'getReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:115:5: Class 'ChildOutput' looks like designed for extension (can be subclassed), but the method 'setReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildOutput' final or making the method 'setReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\ChildOutput.java:115:34: Parameter receivedGifts should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\GiftOutput.java:11:23: Parameter gift should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\GiftOutput.java:17:5: Class 'GiftOutput' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutput' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\GiftOutput.java:21:5: Class 'GiftOutput' looks like designed for extension (can be subclassed), but the method 'setProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutput' final or making the method 'setProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\GiftOutput.java:21:32: Parameter productName should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\GiftOutput.java:25:5: Class 'GiftOutput' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutput' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\GiftOutput.java:29:5: Class 'GiftOutput' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutput' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\GiftOutput.java:29:26: Parameter price should be final. [FinalParameters]
[ERROR] D:\ProiectPOO\.\src\write\GiftOutput.java:33:5: Class 'GiftOutput' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutput' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\GiftOutput.java:37:5: Class 'GiftOutput' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftOutput' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\ProiectPOO\.\src\write\GiftOutput.java:37:29: Parameter category should be final. [FinalParameters]
Audit done.
Checkstyle ends with 109 errors.
